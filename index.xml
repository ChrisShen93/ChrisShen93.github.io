<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris&#39;s site</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Chris&#39;s site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>ChrisShen93</copyright>
    <lastBuildDate>Wed, 25 Jul 2018 08:57:10 +0800</lastBuildDate>
    
	<atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JSX in Vue</title>
      <link>http://localhost:1313/post/vue-jsx/</link>
      <pubDate>Wed, 25 Jul 2018 08:57:10 +0800</pubDate>
      
      <guid>http://localhost:1313/post/vue-jsx/</guid>
      <description>使用 JSX Vue 的 template 书写起来很方便，但是对于 Vue 2.5.0 之前的版本来说，想使用 functional(stateless) 组件，就需要放弃使用 template，而去使用 render 方法（）。 &amp;lt;template&amp;gt; &amp;lt;div&amp;gt; {{ msg }} &amp;lt;/div&amp;gt; &amp;lt;/template&amp;gt; &amp;lt;script&amp;gt; export</description>
    </item>
    
    <item>
      <title>SVG</title>
      <link>http://localhost:1313/post/svg/</link>
      <pubDate>Wed, 18 Jul 2018 15:43:48 +0800</pubDate>
      
      <guid>http://localhost:1313/post/svg/</guid>
      <description>SVG 学习笔记 1. 一个最简单的例子 &amp;lt;svg version=&amp;quot;1.1&amp;quot; baseProfile=&amp;quot;full&amp;quot; width=&amp;quot;300&amp;quot; height=&amp;quot;200&amp;quot; xmlns=&amp;quot;http://www.w3.org/2000/svg&amp;quot;&amp;gt; &amp;lt;rect width=&amp;quot;100%&amp;quot; height=&amp;quot;100%&amp;quot; fill=&amp;quot;red&amp;quot;/&amp;gt; &amp;lt;/svg&amp;gt; 其中，xmlns必不可少。SVG是XML的一种方言，其命名空间由xmlns指定。 2. 理解 vi</description>
    </item>
    
    <item>
      <title>Canvas Note</title>
      <link>http://localhost:1313/post/canvas-note/</link>
      <pubDate>Sat, 14 Jul 2018 08:58:12 +0800</pubDate>
      
      <guid>http://localhost:1313/post/canvas-note/</guid>
      <description>Canvas Tutorial Canvas 是一个利用脚本来动态绘制图片及动画的 HTML 标签。 Canvas 并不被一些老旧的浏览器支持。 相关术语 Canvas interface element: 实现了规范定义的绘图方法和属性的元素，即 canvas 元素</description>
    </item>
    
    <item>
      <title>随便说句话</title>
      <link>http://localhost:1313/post/about/</link>
      <pubDate>Tue, 03 Jul 2018 14:43:24 +0800</pubDate>
      
      <guid>http://localhost:1313/post/about/</guid>
      <description>希望能一直保持好奇心。</description>
    </item>
    
  </channel>
</rss>